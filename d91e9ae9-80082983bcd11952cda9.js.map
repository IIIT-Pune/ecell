{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["SDK_VERSION","setSDKVersion","version","id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","FORGE_DOMAIN_RE","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE$2","VisibilityMonitor","hidden","visibilityChange","visible_","visible","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","request","p","_path","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","token_1","authMethod","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","label","nextConnectionId_","trys","all","sent","interrupt","resume","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","isEmpty","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode","nodeFromJSON","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","lastPushTime","lastRandChars","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","tree","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childServerCache","childWritesCache","childOperation","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","last","validationPathPush","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","creatorFunction","statsReporter_","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","sparseSnapshotTreeForget","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","nodeQueue","order","to","includeSelf","treeForEachAncestor","repoAbortTransactionsOnNode","treeForEachDescendant","childrenFirst","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect$1","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot$1","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","apiName","useDatabaseEmulator","tokenProvider","mockUserToken","repoManagerApplyEmulatorSettings","goOffline","goOnline","SERVER_TIMESTAMP","TransactionResult$1","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","_delegate","objectToMerge","newObjectToMerge","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","_increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","_forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-80082983bcd11952cda9.js","sourcesContent":["import \"core-js/modules/es.array.reduce\";\nimport firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.10.7\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\n\n\nvar AppCheckTokenProvider =\n/** @class */\nfunction () {\n  function AppCheckTokenProvider(appName_, appCheckProvider) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.appCheckProvider = appCheckProvider;\n    this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.appCheck) {\n      appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) {\n        return _this.appCheck = appCheck;\n      });\n    }\n  }\n\n  AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.appCheck) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.appCheck) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.appCheck.getToken(forceRefresh);\n  };\n\n  AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    var _a;\n\n    (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) {\n      return appCheck.addTokenListener(listener);\n    });\n  };\n\n  AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\n    warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" + 'are invalid. This usually indicates your app was not initialized correctly.');\n  };\n\n  return AppCheckTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.onInit(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.auth_) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.auth_) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\n\n\nvar EmulatorTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorTokenProvider(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  };\n\n  EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  };\n\n  EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorTokenProvider.prototype.notifyForInvalidToken = function () {};\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n\n\n  EmulatorTokenProvider.OWNER = 'owner';\n  return EmulatorTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar APP_CHECK_TOKEN_PARAM = 'ac';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function get() {\n      return this._host;\n    },\n    set: function set(newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The AppCheck token for this client.\r\n   * @param authToken The AuthToken to use for this connection.\r\n   * @param transportSessionId Optional transportSessionid if we are\r\n   * reconnecting for an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n   * already created a connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    var _this = this;\n\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      // Always add the token if we have one.\n      if (_this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2];\n\n        _a[3];\n        _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (_this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The App Check Token for this client.\r\n   * @param authToken The Auth Token for this client.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting\r\n   * to an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous\r\n   * connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n\n        if (this.authToken) {\n          options.headers['Authorization'] = this.authToken;\n        }\n\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        } // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param appCheckToken_ - The App Check Token for this device.\r\n   * @param authToken_ - The auth token for this session.\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.appCheckToken_ = appCheckToken_;\n    this.authToken_ = authToken_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * Refreshes the app check token for the current connection.\r\n   * @param token The app check token\r\n   */\n\n\n  ServerActions.prototype.refreshAppCheckToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.appCheckToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.invalidAppCheckTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    this.initConnection_();\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    this.initConnection_();\n    var queryId = query._queryIdentifier;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n\n        var indexPath = query._path.toString();\n\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n\n  PersistentConnection.prototype.refreshAppCheckToken = function (token) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, function () {});\n      }\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given token. If the authentication\r\n   * attempt fails, it's triggered like the token was revoked (the connection is\r\n   * closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAppCheck = function () {\n    var _this = this;\n\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest('appcheck', {\n        'token': this.appCheckToken_\n      }, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (status === 'ok') {\n          _this.invalidAppCheckTokenCount_ = 0;\n        } else {\n          _this.onAppCheckRevoked_(status, data);\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    this.initConnection_();\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.initConnection_ = function () {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.shouldReconnect_()) return [3\n            /*break*/\n            , 4];\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            onDataMessage = this.onDataMessage_.bind(this);\n            onReady = this.onReady_.bind(this);\n            onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            lastSessionId = this.lastSessionId;\n            canceled_1 = false;\n            connection_1 = null;\n\n            closeFn = function closeFn() {\n              if (connection_1) {\n                connection_1.close();\n              } else {\n                canceled_1 = true;\n                onDisconnect_1();\n              }\n            };\n\n            sendRequestFn = function sendRequestFn(msg) {\n              assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n              connection_1.sendRequest(msg);\n            };\n\n            this.realtime_ = {\n              close: closeFn,\n              sendRequest: sendRequestFn\n            };\n            forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Promise.all([this.authTokenProvider_.getToken(forceRefresh), this.appCheckTokenProvider_.getToken(forceRefresh)])];\n\n          case 2:\n            _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\n\n            if (!canceled_1) {\n              log('getToken() completed. Creating connection.');\n              this.authToken_ = authToken && authToken.accessToken;\n              this.appCheckToken_ = appCheckToken && appCheckToken.token;\n              connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1,\n              /* onKill= */\n              function (reason) {\n                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\n\n                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              }, lastSessionId);\n            } else {\n              log('getToken() completed but was canceled');\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _b.sent();\n            this.log_('Failed to get token: ' + error_1);\n\n            if (!canceled_1) {\n              if (this.repoInfo_.nodeAdmin) {\n                // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                // But getToken() may also just have temporarily failed, so we still want to\n                // continue retrying.\n                warn(error_1);\n              }\n\n              closeFn();\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true; // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n    this.tryAppCheck();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE$2;\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$2 = val;\n}\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON$1;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON$1 = val;\n}\n\nfunction setMaxNode(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode$1(MAX_NODE);\nsetMaxNode(MAX_NODE);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  };\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n\n    var pathString = query._path.toString();\n\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    return Promise.all([this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false), this.appCheckTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false)]).then(function (_a) {\n      var _b = __read(_a, 2),\n          authToken = _b[0],\n          appCheckToken = _b[1];\n\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function filter(write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function get() {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function hashFn() {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function onComplete(status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.appCheckProvider_ = appCheckProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_, repo.appCheckProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  });\n  repo.appCheckProvider_.addTokenChangeListener(function (result) {\n    repo.server_.refreshAppCheckToken(result.token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function stopListening() {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function stopListening(query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Initialize transaction.\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      var _loop_1 = function _loop_1(i) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n\n        queue[i].unwatcher();\n      };\n\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n              queue[i].status = 4\n              /* NEEDS_ABORT */\n              ;\n            } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  var _loop_2 = function _loop_2(i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else if (transaction.status === 0\n    /* RUN */\n    ) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = repoGenerateServerValues(repo);\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n          }\n        }\n      }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n          queue[to] = queue[from];\n          to++;\n        }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = 3\n          /* SENT_NEEDS_ABORT */\n          ;\n          queue[i].abortReason = 'set';\n        } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\n\n\nvar CallbackContext =\n/** @class */\nfunction () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function get() {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n\n  return CallbackContext;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\n\n\nvar OnDisconnect$1 =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\n\nvar QueryImpl =\n/** @class */\nfunction () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function get() {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function get() {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function get() {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function get() {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\n\n\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\n\n\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\n\n\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\n\n\nvar ReferenceImpl =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n\n\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function get() {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function get() {\n      var ref = this;\n\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\n\n\nvar DataSnapshot$1 =\n/** @class */\nfunction () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function get() {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function get() {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function get() {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this._node; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\n\n\nfunction ref(db, path) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('ref');\n\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\n\n\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('refFromURL');\n\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\n\n\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\n\n\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\n\n\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value,\n  /*priority=*/\n  null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\n\n\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\n\n\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of a child_x event.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(eventType, callbackContext) {\n    this.eventType = eventType;\n    this.callbackContext = callbackContext;\n  }\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  };\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\n  };\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    if (other instanceof ChildEventRegistration) {\n      return this.eventType === other.eventType && (!this.callbackContext || !other.callbackContext || this.callbackContext.matches(other.callbackContext));\n    }\n\n    return false;\n  };\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return !!this.callbackContext;\n  };\n\n  return ChildEventRegistration;\n}();\n\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var cancelCallback;\n\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n\n    var onceCallback = function onceCallback(dataSnapshot, previousChildName) {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback_1(dataSnapshot, previousChildName);\n    };\n\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\n\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\n\n\nfunction off(query, eventType, callback) {\n  var container = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\n\n\nvar QueryConstraint =\n/** @class */\nfunction () {\n  function QueryConstraint() {}\n\n  return QueryConstraint;\n}();\n\nvar QueryEndAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndAtConstraint, _super);\n\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\n\n\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nvar QueryEndBeforeConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nvar QueryStartAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAtConstraint, _super);\n\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nvar QueryStartAfterConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nvar QueryLimitToFirstConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nvar QueryLimitToLastConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nvar QueryOrderByChildConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n\n    _this._path = _path;\n    return _this;\n  }\n\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\n\n\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nvar QueryOrderByKeyConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\n\nvar QueryOrderByPriorityConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\n\n\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\n\nvar QueryOrderByValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\n\nvar QueryEqualToValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\n\n\nfunction query(query) {\n  var e_1, _a;\n\n  var queryConstraints = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n\n  var queryImpl = getModularInstance(query);\n\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER) : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\n  return new FirebaseDatabase(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName]; // This should never happen...\n\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\n  var appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = appRepos[repoInfo.toURLString()];\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\n\n\nvar FirebaseDatabase =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function FirebaseDatabase(_repoInternal,\n  /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this._instanceStarted = false;\n  }\n\n  Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\n    get: function get() {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\n    get: function get() {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseDatabase.prototype._delete = function () {\n    this._checkNotDeleted('delete');\n\n    repoManagerDeleteRepo(this._repo, this.app.name);\n    this._repoInternal = null;\n    this._rootInternal = null;\n    return Promise.resolve();\n  };\n\n  FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n\n  return FirebaseDatabase;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\n\n\nfunction useDatabaseEmulator(db, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('useEmulator');\n\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  }\n\n  var repo = db._repoInternal;\n  var tokenProvider = undefined;\n\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\n    }\n\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    var token = createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  } // Modify the repo to apply emulator settings\n\n\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\n\n\nfunction goOffline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOffline');\n\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\n\n\nfunction goOnline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOnline');\n\n  repoResume(db._repo);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\n\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\n\n\nfunction _increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\n\n\nvar TransactionResult$1 =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function TransactionResult(\n  /** Whether the transaction was successfully committed. */\n  committed,\n  /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n\n\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\n\n\nfunction runTransaction(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n\n  var promiseComplete = function promiseComplete(error, committed, node) {\n    var dataSnapshot = null;\n\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\n    }\n  }; // Add a watch to make sure we get server updates.\n\n\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n\n    var result = this._delegate.cancel();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n\n    var result = this._delegate.remove();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n\n    var result = this._delegate.set(value);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n\n    var result = this._delegate.setWithPriority(value, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n\n    var result = this._delegate.update(objectToMerge);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n\n    var _a;\n\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n\n    if (callback) {\n      var valueCallback = function valueCallback() {};\n\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    var _this = this;\n\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      var result = new DataSnapshot(_this.database, expSnapshot);\n\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n\n      deferred.resolve(result);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n\n    var cancelCallback = function cancelCallback(error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\n    });\n\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\n  };\n\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n   */\n\n\n  Database.prototype.useEmulator = function (host, port, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    useDatabaseEmulator(this._delegate, host, port, options);\n  };\n\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function increment(delta) {\n      return _increment(delta);\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  connection.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider,\n    /* appCheckProvider= */\n    undefined, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  repoManagerForceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var appCheckProvider = container.getProvider('app-check-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}